\begin{tikzpicture}[node distance=1.7cm] 
	\node (0,0) (start) {};
	\path[ellipse_block = 
    		reference: start 
    		text: START
	];
	\node[below of = start_block] (input) {};
	\block
		{input}
		{Dane wejściowe:\\
		zbiór punktów 
			$P = \left\{
				p_1,
				p_2,
				...,
				p_n
			\right\} \subset \mathbb{R}^2$, dla każdego z punktów w zbiorze określone są funkcje:\\
			 $x\left(p\right)$ (oznaczająca wartość odciętej punktu $p$)\\
			 $y\left(p\right)$ (oznaczająca wartość rzędnej punktu $p$)
		}
	\node[below of = input_south] (centroid) {};
	\block
		{centroid}
		{
		Wyznaczyć punkt $O$, stanowiący centroid zbioru $P$.
		Następnie dla każdego punktu $p$ ze zbioru $P$ wykonać przekształcenia:
		 $x\left(p\right) := x\left(p\right) -  x\left(O\right)$\\
		 $y\left(p\right) := y\left(p\right) -  y\left(O\right)$\\
		 Następnie przypisać współrzędne punktu $O$:\\
		 $x\left(O\right) := 0$\\
		 $y\left(O\right) := 0$\\
		(Tak aby punkt $O$ znajdował się na początku układu współrzędnych.)
		}



	\node[below of = centroid_south] (sort) {};
	\block
		{sort}
		{
			Posortować leksykograficznie wszystkie punkty zbioru $P$ według porządku $\left(\theta\left(p\right), \left|R\right|\left(p\right)\right)$, gdzie $\theta\left(p\right)$ to wartość kąta wektora wiodącego punktu $p$, natomiast $\left|R\right|\left(p\right)$ to długość tego wektora.
		}
	\node[below of = sort_south] (cykl) {};
	\block
		{cykl}
		{
			Z otrzymanego, uporządkowanego zbioru $P$ utworzyć listę pozwalającą na wyznaczenie następnika punktu $p$ w liście - poprzez zastosowanie funkcji $next\left(p\right)$ oraz znalezienie poprzednika punktu $p$ w liście poprzez zastosowanie funkcji $prev\left(p\right)$.\\
	Funkcja $next$ dla ostatniego punktu w uporządkowanym zbiorze będzie wskazywała na pierwszy punkt tego zbioru, natomiast funkcja $prev$ dla pierwszego punktu uporządkowanego zbioru będzie wskazywała na ostatni punkt tego zbioru.
		}
	\node[below of =cykl_south] (punkts) {};
	\block
		{punkts}
		{
			Wyznacz punkt $s$ będący punktem o najmniejszej wartości odciętej ze zbioru punktów o najmniejszej wartości rzędnej ze zbioru $P$.
		}
		
	\node[right of =start, node distance = 8 cm] (q) {};
	\smallblock
		{q}
		{
			$q:=s$
		}
	\node[below of =q] (isequal) {};
	\chooseblock
		{isequal}
		{
			\begin{small}
			$next\left(q\right) \neq s$
			\end{small}
		}
	\node[below of =isequal_south] (inside) {};
	\chooseblock
		{inside}
		{
			$next\left(q\right) \in \Delta\left(
			 	O,
			 	q,
			 	next\left(
			 		next\left(
			 			q
			 		\right)
			 	\right)
			 \right)$
		}
	\node[below of =inside_south] (remove) {};
	\smallblock
		{remove}
		{
			$next\left(q\right) := next\left(
				next\left(
					q
				\right)
			\right)$\\
			$prev\left(next\left(q\right)\right) := q$
			
			
		}
	
	\node[below of =remove_south] (qequalss) {};
	\chooseblock
		{qequalss}
		{	
		\begin{small}
			$q\neq s$
		\end{small}	
		}
	
	\node[below of =qequalss_south] (prev) {};
	\smallblock
		{prev}
		{	
		$q:=prev\left(q\right)$
		}
	
	\node[below of =prev_south] (next) {};
	\smallblock
		{next}
		{	
		$q:=next\left(q\right)$
		}
	
	\node[below of =next_south] (output) {};
	\block
		{output}
		{	
			Wynikiem działania algorytmu jest lista zaczynająca się od punktu $s$ - zawiera ona uporządkowane wierzchołki otoczki wypukłej zbioru punktów $P$.
		}
	
	\node[below of =output_south] (stop) {};
	\path[ellipse_block = 
    		reference: stop
    		text: STOP
	];
	
	\draw
		[-arcs]
		(start_block)--
		(input_block);
		
	\draw
		[-arcs]
		(input_block)--
		(centroid_block);
	
	\draw
		[-arcs]
		(centroid_block)--
		(sort_block);
	
	\draw
		[-arcs]
		(sort_block)--
		(cykl_block);
	
	\draw
		[-arcs]
		(cykl_block)--
		(punkts_block);
	
	
	\draw [-arcs] 
		(punkts_block.east) --++
		(.5,0) |-
		(q_block.west);
	
	\draw [-arcs] 
		(q_block) -- node (centerq) {}
		(isequal_block);
		
	\draw [-arcs] 
		(isequal_block) --
		(inside_block);
	
	\draw [-arcs] 
		(inside_block) --
		(remove_block);
	
	\draw [-arcs] 
		(remove_block) --
		(qequalss_block);
		
	\draw [-arcs] 
		(qequalss_block) --
		(prev_block);
	
	\draw [-arcs] 
		(isequal_block.west) --++
		(-2,0) |-
		(output_block.west);
	
	\draw [-arcs] 
		(inside_block.west) --++
		(-1.07,0) |-
		(next_block.west);
		
	\draw [-arcs] 
		(inside_block.west) --++
		(-1.07,0) |-
		(next_block.west);
	
	
		
	
	
	\draw [-arcs]
		(prev_block.south) --++
		(0,-1) node (prev_below) {};
		
	\draw [-arcs]
		(qequalss_block.west) --++
		(-1.95,0)  |-
		(prev_below.center) --++
		(3.3,0)
		node (prev_right) {};
	
	\draw [-arcs]
		(next_block.east) -|
		(prev_right.center) |-
		(centerq.center);
	
	\draw [-arcs]
		(output_block) --
		(stop_block);
	
	
	
\end{tikzpicture}